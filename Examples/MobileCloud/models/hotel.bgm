# Controls
%active Greater : 2;
%active Less : 2;
%active GreaterOrEqual : 2;
%active LessOrEqual : 2;
%active Equal : 2;
%active NotEqual : 2;
%active zone : 2;
%active server : 2;
%active network : 4;
%active mobile : 6;
%active resourceHandle : 2;
%active costManager : 2;
%active contextAware : 7;
%active jobHandle : 2;
%active application : 4;
%active service : 4;
%active securityManager : 2;
%active speed : 1;
%active power : 1;
%active location : 1;
%active complexity : 1;
%active input : 1;
%active bandwidth : 1;
%active latency : 1;
%active networkType : 1;
%active time : 0;
%active fee : 0;
%active photo : 0;
%active transition : 0;
%active job : 1;
%active part : 1;
%active result : 0;
%active clone : 2;
%active weblet : 0;
%active strategy : 0;
%active finished : 0;
%active pointXY : 1;
%active luminous : 1;
%active pressure : 1;
%active vm : 2;

# Names
%innername cah;
%innername jh;
%innername nt;
%innername power;

# Rules
%rule r_0 mobile[idle,idle,idle,hasJH:edge,hasCAH:edge,idle].$0 | zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | $2) | $1 -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | $2 | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].$0) | $1{SysClk:5};

%rule r_1 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,idle] | $0) | $2) | $1 -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,idle].job[idle] | $0) | $2) | $1{SysClk:5};

%rule r_2 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[idle,idle] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,idle].job[idle] | contextAware[hasCAH:edge,idle,speedIs:edge,powerIs:edge,idle,idle,idle].(speed[speedIs:edge] | $3) | $0) | networkType[networkTypeIs:edge] | $2) | $1 -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].job[idle] | contextAware[hasCAH:edge,idle,speedIs:edge,powerIs:edge,idle,idle,idle].(speed[speedIs:edge] | $3) | $0) | networkType[networkTypeIs:edge] | $2) | $1{SysClk:1	Cond:speed>=2,networkType==2	Rand:false};

%rule r_3 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].job[idle] | jobHandle[hasJH:edge,idle] | $0) | $2) | $1 -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge] | part[a:edge]) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | $1{SysClk:2};

%rule r_4 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge] | part[a:edge]) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | $1 -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle].part[a:edge] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge]) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | $1{SysClk:1};

%rule r_5 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle].part[a:edge] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge]) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | server[idle,idle].service[idle,idle,idle,idle] -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,c:edge].part[a:edge] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge]) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | server[idle,idle].service[idle,idle,c:edge,idle]{SysClk:1};

%rule r_6 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,c:edge].part[a:edge] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge]) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | server[idle,idle].service[idle,idle,c:edge,idle] -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,c:edge].part[a:edge] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge] | result) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | server[idle,idle].service[idle,idle,c:edge,idle].result{SysClk:1};

%rule r_7 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,c:edge].part[a:edge] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge] | result) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | server[idle,idle].service[idle,idle,c:edge,idle].result -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle].(part[a:edge] | result) | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge] | result) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | server[idle,idle].service[idle,idle,idle,idle]{SysClk:1};

%rule r_8 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle].(part[a:edge] | result) | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge] | result) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | $1 -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle].part[a:edge] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge] | result | result) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | $1{SysClk:1};

%rule r_9 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[b:edge,idle].part[a:edge] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,b:edge].(job[a:edge] | part[a:edge] | result | result) | jobHandle[hasJH:edge,idle].strategy | $0) | $2) | $1 -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].vm[idle,idle] | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,idle].(job[idle] | result) | jobHandle[hasJH:edge,idle] | $0) | $2) | $1{SysClk:1};

%rule r_10 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,idle].job[idle] | contextAware[hasCAH:edge,idle,speedIs:edge,powerIs:edge,idle,idle,idle].(speed[speedIs:edge] | $1) | $0) | networkType[networkTypeIs:edge] | $2) | server[idle,idle].service[idle,idle,idle,idle] -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,a:edge].job[idle] | contextAware[hasCAH:edge,idle,speedIs:edge,powerIs:edge,idle,idle,idle].(speed[speedIs:edge] | $1) | $0) | networkType[networkTypeIs:edge] | $2) | server[idle,idle].service[idle,idle,a:edge,idle]{SysClk:5	Cond:speed<2||networkType!=2};

%rule r_11 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,a:edge].job[idle] | contextAware[hasCAH:edge,idle,speedIs:edge,powerIs:edge,idle,idle,idle].(speed[speedIs:edge] | $1) | $0) | networkType[networkTypeIs:edge] | $2) | server[idle,idle].service[idle,idle,a:edge,idle] -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,a:edge].job[idle] | contextAware[hasCAH:edge,idle,speedIs:edge,powerIs:edge,idle,idle,idle].(speed[speedIs:edge] | $1) | $0) | networkType[networkTypeIs:edge] | $2) | server[idle,idle].service[idle,idle,a:edge,idle].result{SysClk:1};

%rule r_12 zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,a:edge].job[idle] | $0) | networkType[networkTypeIs:edge] | $2) | server[idle,idle].service[idle,idle,a:edge,idle].result -> zone[idle,idle].network[connected:edge,idle,idle,networkTypeIs:edge].(server[connected:edge,idle].$3 | mobile[connected:edge,idle,idle,hasJH:edge,hasCAH:edge,idle].(application[idle,idle,idle,idle].(job[idle] | result) | $0) | networkType[networkTypeIs:edge] | $2) | server[idle,idle].service[idle,idle,idle,idle]{SysClk:5};


# Model
%agent hotel:zone[idle,idle].a:network[connected:edge,idle,idle,networkTypeIs:edge].(cloudlet:server[connected:edge,idle].vm:vm[idle,idle] | nt:networkType[networkTypeIs:edge]) | server:server[idle,idle].service:service[idle,idle,idle,idle] | apple:mobile[idle,idle,idle,hasJH:edge,hasCAH:edge,idle].(jh:jobHandle[hasJH:edge,idle] | cah:contextAware[hasCAH:edge,idle,speedIs:edge,powerIs:edge,idle,idle,idle].(speed:speed[speedIs:edge] | power:power[powerIs:edge]) | app:application[idle,idle,idle,idle]);

# Go!
%check;